//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   int Time;                          // Offset:    0 Size:     4 [unused]
//   float3 Dummy1;                     // Offset:    4 Size:    12 [unused]
//
// }
//
// cbuffer cbPerObject
// {
//
//   float4x4 World;                    // Offset:    0 Size:    64 [unused]
//   float4 ObjectColor;                // Offset:   64 Size:    16 [unused]
//   float BorderPart;                  // Offset:   80 Size:     4
//   float BorderMultiplyer;            // Offset:   84 Size:     4
//   float Opacity;                     // Offset:   88 Size:     4
//   float ObjectAccentuationFactor;    // Offset:   92 Size:     4 [unused]
//   float3 ObjectScaling;              // Offset:   96 Size:    12 [unused]
//   float SpriteScaling;               // Offset:  108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ObjectTextureSampler              sampler      NA          NA    0        1
// ObjectTexture                     texture  float4          2d    0        1
// cbPerFrame                        cbuffer      NA          NA    0        1
// cbPerObject                       cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 3     z         2     NONE   float       
// TEXCOORD                 1   xyz         3     NONE   float       
// TEXCOORD                 2   xyz         4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb2             5         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_0
    def c1, 0.00400000019, 0.00300000003, 0.200000003, 0.100000001
    def c2, 1, 0, 0, 0
    def c3, 0.00200000009, 0.400000006, 2.9000001, 0.166666672
    dcl t1.xyz
    dcl_2d s0
    mov r0.xy, c1
    mad_sat r1.x, c0.z, r0.y, t1.x
    mad_sat r1.y, c0.z, -r0.y, t1.y
    mad_sat r2.x, c0.z, r0.x, t1.x
    mad_sat r2.y, c0.z, -r0.x, t1.y
    mov r3.xz, c0
    mad_sat r4.x, r3.z, c3.x, t1.x
    mad_sat r4.y, r3.z, -c3.x, t1.y
    mad_sat r5.x, c0.z, -r0.y, t1.x
    mad_sat r5.y, c0.z, r0.y, t1.y
    mad_sat r6.x, c0.z, -r0.x, t1.x
    mad_sat r6.y, c0.z, r0.x, t1.y
    texld r0, r1, s0
    texld r1, r2, s0
    texld r2, r4, s0
    texld r4, r5, s0
    texld r5, r6, s0
    texld r6, t1, s0
    mul r0, r0, c1.z
    mad r0, r1, c1.w, r0
    mad r0, r2, c3.y, r0
    mad r0, r4, c1.z, r0
    mad r0, r5, c1.w, r0
    lrp r1, c0.y, r0, r6
    min r0.w, c0.z, r1.w
    add r1.w, r1.y, r1.x
    add r1.w, r1.z, r1.w
    add r1.w, r1.w, c3.z
    mul r1.w, r1.w, c0.x
    mul r1.w, r1.w, c3.w
    add r2.x, -r3.x, c2.x
    mad r0.x, r1.x, r2.x, r1.w
    mad r0.y, r1.y, r2.x, r1.w
    mad r0.z, r1.z, r2.x, r1.w
    mov oC0, r0

// approximately 35 instruction slots used (6 texture, 29 arithmetic)
ps_4_0
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 3
mad_sat r0.xyzw, cb2[5].zzzz, l(0.002000, 0.004000, 0.003000, 0.003000), v2.xxxy
mov r1.xz, r0.yyzy
mad_sat r2.xyzw, -cb2[5].zzzz, l(0.004000, 0.003000, 0.002000, 0.003000), v2.yyyx
mov r1.yw, r2.xxxy
mov r0.yz, r2.zzwz
sample r2.xyzw, r1.zwzz, t0.xyzw, s0
sample r1.xyzw, r1.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, l(0.200000, 0.200000, 0.200000, 0.200000)
mad r1.xyzw, r1.xyzw, l(0.100000, 0.100000, 0.100000, 0.100000), r2.xyzw
sample r2.xyzw, r0.xyxx, t0.xyzw, s0
sample r0.xyzw, r0.zwzz, t0.xyzw, s0
mad r1.xyzw, r2.xyzw, l(0.400000, 0.400000, 0.400000, 0.400000), r1.xyzw
mad r0.xyzw, r0.xyzw, l(0.200000, 0.200000, 0.200000, 0.200000), r1.xyzw
mad_sat r1.x, -cb2[5].z, l(0.004000), v2.x
mad_sat r1.y, cb2[5].z, l(0.004000), v2.y
sample r1.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.xyzw, r1.xyzw, l(0.100000, 0.100000, 0.100000, 0.100000), r0.xyzw
sample r1.xyzw, v2.xyxx, t0.xyzw, s0
add r2.xy, -cb2[5].yxyy, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r1.xyzw, r1.xyzw, r2.xxxx
mad r0.xyzw, r0.xyzw, cb2[5].yyyy, r1.xyzw
add r1.x, r0.y, r0.x
add r1.x, r0.z, r1.x
add r1.x, r1.x, l(2.900000)
mul r1.x, r1.x, cb2[5].x
mul r0.xyz, r2.yyyy, r0.xyzx
min o0.w, r0.w, cb2[5].z
mad o0.xyz, r1.xxxx, l(0.166667, 0.166667, 0.166667, 0.000000), r0.xyzx
ret 
// Approximately 29 instruction slots used
