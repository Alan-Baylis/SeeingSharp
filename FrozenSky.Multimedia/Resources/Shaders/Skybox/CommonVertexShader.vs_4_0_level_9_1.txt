//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer cbPerView
// {
//
//   float4x4 ViewProj;                 // Offset:    0 Size:    64
//   float3 CameraPosition;             // Offset:   64 Size:    12
//   float GradientFactor;              // Offset:   76 Size:     4 [unused]
//   float BorderFactor;                // Offset:   80 Size:     4 [unused]
//   float LightPower;                  // Offset:   84 Size:     4 [unused]
//   float StrongLightFactor;           // Offset:   88 Size:     4 [unused]
//   float Ambient;                     // Offset:   92 Size:     4 [unused]
//   float Accentuation;                // Offset:   96 Size:     4 [unused]
//   float2 ScreenPixelSize;            // Offset:  100 Size:     8 [unused]
//   float Dummy;                       // Offset:  108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbPerView                         cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float       
// TEXCOORD                 1   x           4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 3     z         2     NONE   float     z 
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb1             0         2  ( FLT, FLT, FLT, FLT)
// c3         cb1             3         2  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    def c5, 1, 0, 0, 0
    dcl_texcoord v0
    add r0.xyz, v0, c4
    mov r0.w, c5.x
    dp4 r1.x, r0, c1
    dp4 r1.y, r0, c2
    dp4 r0.z, r0, c3
    mad r0.xy, r0.z, c0, r1
    mov oPos, r0.xyzz
    mov oT0, c5.y
    mov oT1.xyz, c5.y
    mov oT2.xyz, c5.y
    mov oT3.xyz, v0

// approximately 11 instruction slots used
vs_4_0
dcl_constantbuffer cb1[5], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.z
dcl_output o3.xyz
dcl_output o4.xyz
dcl_temps 2
add r0.xyz, v0.xyzx, cb1[4].xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb1[0].xyzw
dp4 r1.y, r0.xyzw, cb1[1].xyzw
dp4 r1.z, r0.xyzw, cb1[3].xyzw
mov o0.xyzw, r1.xyzz
mov o1.xyzw, l(0,0,0,0)
mov o2.xyz, l(0,0,0,0)
mov o3.xyz, l(0,0,0,0)
mov o4.xyz, v0.xyzx
ret 
// Approximately 11 instruction slots used
