//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer cbPerView
// {
//
//   float4x4 ViewProj;                 // Offset:    0 Size:    64
//   float3 CameraPosition;             // Offset:   64 Size:    12 [unused]
//   float GradientFactor;              // Offset:   76 Size:     4 [unused]
//   float BorderFactor;                // Offset:   80 Size:     4 [unused]
//   float LightPower;                  // Offset:   84 Size:     4 [unused]
//   float StrongLightFactor;           // Offset:   88 Size:     4 [unused]
//   float Ambient;                     // Offset:   92 Size:     4 [unused]
//   float Accentuation;                // Offset:   96 Size:     4 [unused]
//   float2 ScreenPixelSize;            // Offset:  100 Size:     8 [unused]
//   float Dummy;                       // Offset:  108 Size:     4 [unused]
//
// }
//
// cbuffer cbPerObject
// {
//
//   float4x4 World;                    // Offset:    0 Size:    64
//   float4 ObjectColor;                // Offset:   64 Size:    16
//   float BorderPart;                  // Offset:   80 Size:     4 [unused]
//   float BorderMultiplyer;            // Offset:   84 Size:     4 [unused]
//   float Opacity;                     // Offset:   88 Size:     4 [unused]
//   float ObjectAccentuationFactor;    // Offset:   92 Size:     4 [unused]
//   float3 ObjectScaling;              // Offset:   96 Size:    12 [unused]
//   float SpriteScaling;               // Offset:  108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbPerView                         cbuffer      NA          NA    1        1
// cbPerObject                       cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// COLOR                    0   xyzw        2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float       
// TEXCOORD                 1   x           4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 3     z         2     NONE   float     z 
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb1             0         4  ( FLT, FLT, FLT, FLT)
// c5         cb2             0         5  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
    def c10, 1, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    mov r0, c6
    mul r1, r0, c3.y
    mov r2, c5
    mad r1, r2, c3.x, r1
    mov r3, c7
    mad r1, r3, c3.z, r1
    mov r4, c8
    mad r1, r4, c3.w, r1
    mad r5, v0.xyzx, c10.xxxy, c10.yyyx
    dp4 oPos.z, r5, r1
    dp3 r1.x, v1, c5
    dp3 r1.y, v1, c6
    dp3 r1.z, v1, c7
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT2.xyz, r1.w, r1
    mul r1, r0, c1.y
    mad r1, r2, c1.x, r1
    mad r1, r3, c1.z, r1
    mad r1, r4, c1.w, r1
    dp4 r1.x, r5, r1
    mul r6, r0, c2.y
    mad r6, r2, c2.x, r6
    mad r6, r3, c2.z, r6
    mad r6, r4, c2.w, r6
    dp4 r1.y, r5, r6
    mul r0, r0, c4.y
    mad r0, r2, c4.x, r0
    mad r0, r3, c4.z, r0
    mad r0, r4, c4.w, r0
    dp4 r0.x, r5, r0
    mad oPos.xy, r0.x, c0, r1
    mov oPos.w, r0.x
    mov oT0, c9
    mov oT1.xyz, c10.y
    mov oT3.xyz, c10.y

// approximately 36 instruction slots used
vs_4_0
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.z
dcl_output o3.xyz
dcl_output o4.xyz
dcl_temps 2
mul r0.xyzw, cb1[0].yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, cb1[0].xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, cb1[0].zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, cb1[0].wwww, r0.xyzw
mov r1.xyz, v0.xyzx
mov r1.w, l(1.000000)
dp4 o0.x, r1.xyzw, r0.xyzw
mul r0.xyzw, cb1[1].yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, cb1[1].xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, cb1[1].zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, cb1[1].wwww, r0.xyzw
dp4 o0.y, r1.xyzw, r0.xyzw
mul r0.xyzw, cb1[2].yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, cb1[2].xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, cb1[2].zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, cb1[2].wwww, r0.xyzw
dp4 o0.z, r1.xyzw, r0.xyzw
mul r0.xyzw, cb1[3].yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, cb1[3].xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, cb1[3].zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, cb1[3].wwww, r0.xyzw
dp4 o0.w, r1.xyzw, r0.xyzw
mov o1.xyzw, cb2[4].xyzw
mov o2.xyz, l(0,0,0,0)
dp3 r0.x, v1.xyzx, cb2[0].xyzx
dp3 r0.y, v1.xyzx, cb2[1].xyzx
dp3 r0.z, v1.xyzx, cb2[2].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o3.xyz, r0.wwww, r0.xyzx
mov o4.xyz, l(0,0,0,0)
ret 
// Approximately 32 instruction slots used
