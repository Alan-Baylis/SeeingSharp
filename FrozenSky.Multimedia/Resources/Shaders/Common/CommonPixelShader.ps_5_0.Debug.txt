//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   int Time;                          // Offset:    0 Size:     4 [unused]
//   float3 Dummy1;                     // Offset:    4 Size:    12 [unused]
//
// }
//
// cbuffer cbPerView
// {
//
//   float4x4 ViewProj;                 // Offset:    0 Size:    64 [unused]
//   float3 CameraPosition;             // Offset:   64 Size:    12
//   float GradientFactor;              // Offset:   76 Size:     4 [unused]
//   float BorderFactor;                // Offset:   80 Size:     4
//   float LightPower;                  // Offset:   84 Size:     4
//   float StrongLightFactor;           // Offset:   88 Size:     4
//   float Ambient;                     // Offset:   92 Size:     4
//   float Accentuation;                // Offset:   96 Size:     4
//   float2 ScreenPixelSize;            // Offset:  100 Size:     8 [unused]
//   float Dummy;                       // Offset:  108 Size:     4 [unused]
//
// }
//
// cbuffer cbPerObject
// {
//
//   float4x4 World;                    // Offset:    0 Size:    64 [unused]
//   float4 ObjectColor;                // Offset:   64 Size:    16 [unused]
//   float BorderPart;                  // Offset:   80 Size:     4
//   float BorderMultiplyer;            // Offset:   84 Size:     4
//   float Opacity;                     // Offset:   88 Size:     4
//   float ObjectAccentuationFactor;    // Offset:   92 Size:     4
//   float3 ObjectScaling;              // Offset:   96 Size:    12 [unused]
//   float SpriteScaling;               // Offset:  108 Size:     4 [unused]
//
// }
//
// cbuffer cbPerMaterial
// {
//
//   float4 MaterialColor;              // Offset:    0 Size:    16 [unused]
//   float4 TextureReciprocal;          // Offset:   16 Size:    16 [unused]
//   float Texture0Factor;              // Offset:   32 Size:     4
//   float MaxClipDistance;             // Offset:   36 Size:     4
//   float ClipFactor;                  // Offset:   40 Size:     4
//   float AdjustTextureCoordinatesFactor;// Offset:   44 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ObjectTextureSampler              sampler      NA          NA    0        1
// ObjectTexture                     texture  float4          2d    0        1
// cbPerFrame                        cbuffer      NA          NA    0        1
// cbPerView                         cbuffer      NA          NA    1        1
// cbPerObject                       cbuffer      NA          NA    2        1
// cbPerMaterial                     cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 3     z         2     NONE   float     z 
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.z
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- input.pos.x; v0.y <- input.pos.y; v0.z <- input.pos.z; v0.w <- input.pos.w; 
//   v1.x <- input.col.x; v1.y <- input.col.y; v1.z <- input.col.z; v1.w <- input.col.w; 
//   v2.x <- input.tex.x; v2.y <- input.tex.y; 
//   v3.x <- input.normal.x; v3.y <- input.normal.y; v3.z <- input.normal.z; 
//   v4.x <- input.pos3D.x; v4.y <- input.pos3D.y; v4.z <- input.pos3D.z; 
//   v2.z <- input.texFact; 
//   o1.x <- <main return value>.normalDepth.x; o1.y <- <main return value>.normalDepth.y; o1.z <- <main return value>.normalDepth.z; o1.w <- <main return value>.normalDepth.w; 
//   o0.x <- <main return value>.color.x; o0.y <- <main return value>.color.y; o0.z <- <main return value>.color.z; o0.w <- <main return value>.color.w
//
#line 11 "D:\Projects\GitHub\RolandKoenig\FrozenSky\FrozenSky.Multimedia\Resources\Shaders\Common\CommonPixelShader.hlsl"
add r0.x, v2.z, cb3[2].x
lt r0.x, l(0.000000), r0.x
if_nz r0.x
  sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.wxyz, s0  // r0.y <- textureColor.x; r0.z <- textureColor.y; r0.w <- textureColor.z; r0.x <- textureColor.w
  mov r1.xyz, r0.yzwy  // r1.x <- textureColor.x; r1.y <- textureColor.y; r1.z <- textureColor.z
else 
  mov r1.xyz, l(0,0,0,0)  // r1.x <- textureColor.x; r1.y <- textureColor.y; r1.z <- textureColor.z
  mov r0.x, l(0)  // r0.x <- textureColor.w
endif 
mul r1.w, r0.x, cb3[2].x  // r1.w <- textureColor.w

#line 19
add r0.yzw, -v4.xxyz, cb1[4].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sqrt r0.y, r0.y  // r0.y <- distanceToCamera

#line 29 "D:\Projects\GitHub\RolandKoenig\FrozenSky\FrozenSky.Multimedia\Resources\Shaders\functions.hlsl"
mul r0.z, r0.y, cb2[5].x
mul r0.z, r0.z, l(0.200000)
max r0.z, r0.z, cb2[5].x  // r0.z <- locBorderPart
div r0.w, l(50.000000), r0.y
min r0.w, r0.w, cb2[5].y  // r0.w <- locBorderMultiplyer

#line 35
ge r2.xy, v2.xyxx, -v2.xyxx
movc r2.xy, r2.xyxx, l(1.000000,1.000000,0,0), l(-1.000000,-1.000000,0,0)
mul r2.zw, r2.xxxy, v2.xxxy
frc r2.zw, r2.zzzw
mul r3.xy, r2.zwzz, r2.xyxx  // r3.x <- texCoord.x; r3.y <- texCoord.y

#line 41
mad r2.xy, -r2.xyxx, r2.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)  // r2.x <- blubx2; r2.y <- bluby2
min r2.xy, r2.xyxx, r3.xyxx
min r2.x, r2.y, r2.x  // r2.x <- blub

#line 45
add r0.z, r0.z, -r2.x
max r0.z, r0.z, l(0.000000)
mul r0.z, r0.w, r0.z  // r0.z <- lineFactor

#line 48
mul r2.xyz, r0.zzzz, v1.xyzx
mad r2.xyz, -r2.xyzx, cb1[5].xxxx, v1.xyzx  // r2.x <- output.x; r2.y <- output.y; r2.z <- output.z

#line 23 "D:\Projects\GitHub\RolandKoenig\FrozenSky\FrozenSky.Multimedia\Resources\Shaders\Common\CommonPixelShader.hlsl"
mad r0.x, -r0.x, cb3[2].x, l(1.000000)
mov r2.w, v1.w
mul r2.xyzw, r0.xxxx, r2.xyzw
mad r1.xyzw, r1.xyzw, r1.wwww, r2.xyzw  // r1.x <- pixelColor.x; r1.y <- pixelColor.y; r1.z <- pixelColor.z; r1.w <- pixelColor.w

#line 26
add_sat r0.x, -r0.y, cb3[2].y  // r0.x <- clipFactorMultiplyer
mad r0.x, -cb3[2].z, r0.x, r1.w
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x

#line 60 "D:\Projects\GitHub\RolandKoenig\FrozenSky\FrozenSky.Multimedia\Resources\Shaders\functions.hlsl"
mov_sat r0.x, cb2[5].w
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, cb1[6].x  // r0.y <- locAccentuationFactor
dp3 r0.z, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)  // r0.z <- inputGrayScaled.x
add r0.w, -r0.z, l(1.000000)
mad r0.z, r0.w, l(0.769231), r0.z
mad r0.x, -r0.x, cb1[6].x, l(1.000000)
mul r1.xyz, r1.xyzx, r0.xxxx
mad r0.xyz, r0.zzzz, r0.yyyy, r1.xyzx  // r0.x <- output.x; r0.y <- output.y; r0.z <- output.z

#line 76
add r1.xyz, v4.xyzx, -cb1[4].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx  // r1.x <- lightDir.x; r1.y <- lightDir.y; r1.z <- lightDir.z
dp3_sat r0.w, -r1.xyzx, v3.xyzx  // r0.w <- diffuseLightingFactor

#line 36 "D:\Projects\GitHub\RolandKoenig\FrozenSky\FrozenSky.Multimedia\Resources\Shaders\Common\CommonPixelShader.hlsl"
mad r0.w, -r0.w, cb1[5].y, l(1.000000)
div r0.w, r0.w, cb1[5].z
add r0.w, -r0.w, cb1[5].w

#line 39
add_sat r0.w, r0.w, l(1.000000)
mul o0.xyz, r0.wwww, r0.xyzx

#line 46
mov o0.w, cb2[5].z
mov o1.xyz, v3.xyzx
mov o1.w, l(0)
ret 
// Approximately 62 instruction slots used
