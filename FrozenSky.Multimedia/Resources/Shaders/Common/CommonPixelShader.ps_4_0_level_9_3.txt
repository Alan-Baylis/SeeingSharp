//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   int Time;                          // Offset:    0 Size:     4 [unused]
//   float3 Dummy1;                     // Offset:    4 Size:    12 [unused]
//
// }
//
// cbuffer cbPerView
// {
//
//   float4x4 ViewProj;                 // Offset:    0 Size:    64 [unused]
//   float3 CameraPosition;             // Offset:   64 Size:    12
//   float GradientFactor;              // Offset:   76 Size:     4 [unused]
//   float BorderFactor;                // Offset:   80 Size:     4
//   float LightPower;                  // Offset:   84 Size:     4
//   float StrongLightFactor;           // Offset:   88 Size:     4
//   float Ambient;                     // Offset:   92 Size:     4
//   float Accentuation;                // Offset:   96 Size:     4
//   float2 ScreenPixelSize;            // Offset:  100 Size:     8 [unused]
//   float Dummy;                       // Offset:  108 Size:     4 [unused]
//
// }
//
// cbuffer cbPerObject
// {
//
//   float4x4 World;                    // Offset:    0 Size:    64 [unused]
//   float4 ObjectColor;                // Offset:   64 Size:    16 [unused]
//   float BorderPart;                  // Offset:   80 Size:     4
//   float BorderMultiplyer;            // Offset:   84 Size:     4
//   float Opacity;                     // Offset:   88 Size:     4
//   float ObjectAccentuationFactor;    // Offset:   92 Size:     4
//   float3 ObjectScaling;              // Offset:   96 Size:    12 [unused]
//   float SpriteScaling;               // Offset:  108 Size:     4 [unused]
//
// }
//
// cbuffer cbPerMaterial
// {
//
//   float4 MaterialColor;              // Offset:    0 Size:    16 [unused]
//   float4 TextureReciprocal;          // Offset:   16 Size:    16 [unused]
//   float Texture0Factor;              // Offset:   32 Size:     4
//   float MaxClipDistance;             // Offset:   36 Size:     4
//   float ClipFactor;                  // Offset:   40 Size:     4
//   float AdjustTextureCoordinatesFactor;// Offset:   44 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ObjectTextureSampler              sampler      NA          NA    0        1
// ObjectTexture                     texture  float4          2d    0        1
// cbPerFrame                        cbuffer      NA          NA    0        1
// cbPerView                         cbuffer      NA          NA    1        1
// cbPerObject                       cbuffer      NA          NA    2        1
// cbPerMaterial                     cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 3     z         2     NONE   float     z 
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb1             4         3  ( FLT, FLT, FLT, FLT)
// c3         cb2             5         1  ( FLT, FLT, FLT, FLT)
// c4         cb3             2         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c5, 0.300000012, 0.589999974, 0.109999999, 0
    def c6, 1, -1, 0.769230783, 0
    def c7, 0, 0.200000003, 50, 1
    dcl t0
    dcl t1.xyz
    dcl t2.xyz
    dcl t3.xyz
    dcl_2d s0
    cmp r0.xy, t1, c6.x, c6.y
    mul r0.zw, r0.xyxy, t1.xyxy
    frc r0.zw, r0
    mul r1.xy, r0.zwzw, r0
    mad r0.xy, r0, -r0.zwzw, c7.w
    min r2.xy, r0, r1
    min r0.x, r2.y, r2.x
    add r0.yzw, -t3.xxyz, c0.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.z, r0.y
    mul r0.y, r0.y, c7.z
    min r1.x, r0.y, c3.y
    mul r0.y, r0.z, c3.x
    add_sat r0.z, -r0.z, c4.y
    mul r0.y, r0.y, c7.y
    max r1.y, c3.x, r0.y
    add r0.x, -r0.x, r1.y
    max r1.y, r0.x, c7.x
    mul r0.x, r1.x, r1.y
    mul r0.xyw, r0.x, t0.xyzz
    mad r1.xyz, r0.xyww, -c1.x, t0
    add r0.x, t1.z, c4.x
    texld r2, t1, s0
    cmp r2, -r0.x, c7.x, r2
    mul r2.w, r2.w, c4.x
    mov r1.w, t0.w
    lrp r3, r2.w, r2, r1
    mad r0, c4.z, -r0.z, r3.w
    texkill r0
    dp3 r3.w, r3, c5
    add r0.x, -r3.w, c7.w
    mad r3.w, r0.x, c6.z, r3.w
    mov_sat r0.x, c3.w
    add r0.x, -r0.x, c7.w
    mul r0.x, r0.x, c2.x
    lrp r1.xyz, r0.x, r3.w, r3
    add r0.xyz, t3, -c0
    nrm r2.xyz, r0
    dp3_sat r1.w, -r2, t2
    mov r0.w, c7.w
    mad r1.w, r1.w, -c1.y, r0.w
    rcp r0.x, c1.z
    mad r1.w, r1.w, -r0.x, c1.w
    add_sat r1.w, r1.w, c7.w
    mul r0.xyz, r1.w, r1
    mov r0.w, c3.z
    mov oC0, r0
    mul r0, t2.xyzx, c7.wwwx
    mov oC1, r0

// approximately 52 instruction slots used (1 texture, 51 arithmetic)
ps_4_0
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.z
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 4
add r0.x, v2.z, cb3[2].x
lt r0.x, l(0.000000), r0.x
if_nz r0.x
  sample r0.xyzw, v2.xyxx, t0.wxyz, s0
  mov r1.xyz, r0.yzwy
else 
  mov r1.xyz, l(0,0,0,0)
  mov r0.x, l(0)
endif 
mul r1.w, r0.x, cb3[2].x
add r0.yzw, -v4.xxyz, cb1[4].xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sqrt r0.y, r0.y
mul r0.z, r0.y, cb2[5].x
mul r0.z, r0.z, l(0.200000)
max r0.z, r0.z, cb2[5].x
div r0.w, l(50.000000), r0.y
min r0.w, r0.w, cb2[5].y
ge r2.xy, v2.xyxx, -v2.xyxx
movc r2.xy, r2.xyxx, l(1.000000,1.000000,0,0), l(-1.000000,-1.000000,0,0)
mul r2.zw, r2.xxxy, v2.xxxy
frc r2.zw, r2.zzzw
mul r3.xy, r2.zwzz, r2.xyxx
mad r2.xy, -r2.xyxx, r2.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
min r2.xy, r2.xyxx, r3.xyxx
min r2.x, r2.y, r2.x
add r0.z, r0.z, -r2.x
max r0.z, r0.z, l(0.000000)
mul r0.z, r0.w, r0.z
mul r2.xyz, r0.zzzz, v1.xyzx
mad r2.xyz, -r2.xyzx, cb1[5].xxxx, v1.xyzx
mad r0.x, -r0.x, cb3[2].x, l(1.000000)
mov r2.w, v1.w
mul r2.xyzw, r0.xxxx, r2.xyzw
mad r1.xyzw, r1.xyzw, r1.wwww, r2.xyzw
add_sat r0.x, -r0.y, cb3[2].y
mad r0.x, -cb3[2].z, r0.x, r1.w
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
mov_sat r0.x, cb2[5].w
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, cb1[6].x
dp3 r0.z, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r0.w, -r0.z, l(1.000000)
mad r0.z, r0.w, l(0.769231), r0.z
mad r0.x, -r0.x, cb1[6].x, l(1.000000)
mul r1.xyz, r1.xyzx, r0.xxxx
mad r0.xyz, r0.zzzz, r0.yyyy, r1.xyzx
add r1.xyz, v4.xyzx, -cb1[4].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3_sat r0.w, -r1.xyzx, v3.xyzx
mad r0.w, -r0.w, cb1[5].y, l(1.000000)
div r0.w, r0.w, cb1[5].z
add r0.w, -r0.w, cb1[5].w
add_sat r0.w, r0.w, l(1.000000)
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, cb2[5].z
mov o1.xyz, v3.xyzx
mov o1.w, l(0)
ret 
// Approximately 62 instruction slots used
